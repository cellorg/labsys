name: Manual push to ECR

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      microserviceName:
        type: choice
        description: 'microserviceName'
        default: 'microA'
        required: true
        options:
          - microA
          - microB
      targetEnv:
        type: choice
        description: 'targetEnv'
        default: 'd1'
        required: true
        options:
          - d1
          - d2
          - d3
          - d4
          - d5
          - t1
          - t3
          - u1
        
jobs:
  buildDockerImage:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Set env var of ECR repo name
      run: |
        # repository name has to be lower case, https://github.com/docker/build-push-action/issues/37
        echo dockerRepoName=$(echo ${{ github.event.inputs.microserviceName }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
    - name: Set env vars of target environment
      if: ${{ github.event.inputs.targetEnv == 'd1' }}
      run: |
        echo "PDP_OWNER_JDBC_URL=jdbc:oracle:thin:@//pdpd1.cellsignal.com:1521/pdpd5.cellsignal.com" >> $GITHUB_ENV         
        echo "MS_USER_JDBC_URL=jdbc:oracle:thin:@//pdpd1.cellsignal.com:1521/pdpd5.cellsignal.com" >> $GITHUB_ENV 
        echo "INTEGRATE_JDBC_URL=jdbc:oracle:thin:@//pdpd1.cellsignal.com:1521/pdpd5.cellsignal.com" >> $GITHUB_ENV 
        echo "CORELIMS_JDBC_URL=jdbc:oracle:thin:@//pdpd1.cellsignal.com:1521/pdpd5.cellsignal.com" >> $GITHUB_ENV 
        echo "dockerImageTag=version-d1" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: maven
    - name: Build with Maven
      run: |
        cd '${{ github.event.inputs.microserviceName }}-service/service-src'
        mvn -B package --file pom.xml
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.WENDYADMIN_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.WENDYADMIN_SECRET_KEY }}
        aws-region: 'us-east-1'
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run : |
        cd '${{ github.event.inputs.microserviceName }}-service/service-src'
        docker build -t $ECR_REGISTRY/$dockerRepoName:$dockerImageTag .
        docker push $ECR_REGISTRY/$dockerRepoName:$dockerImageTag
          
        
      
      
      
