name: Manual deploy Micro service

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      targetEnv:
        type: choice
        description: 'targetEnv'
        default: 'd1'
        required: true
        options:
          - d1
          - d2
          - t3
          - prod
      microSvcName:
        type: choice
        description: 'microSvcName'
        default: 'microa'
        required: true
        options:
          - microa
          - animal
      fargateSvcDesiredCount:
        description: 'fargateSvcDesiredCount'
        default: '1'
        required: true

run-name: ${{ inputs.targetEnv }} - Deploy ${{ inputs. microSvcName }}, svcCount=${{ inputs.fargateSvcDesiredCount }}, branch=${{ github.head_ref || github.ref_name }}

jobs:
  deployMicroSvc:
    name: manual deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Build with Maven
        run: |
          cd microservices/${{ github.event.inputs.microSvcName }}
          mvn -B package --file pom.xml
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: "16"
      - name: get role ARN of role-to-assume based on targetEnv
        run: |
          cd cdk-infra/admin-init-infra
          githubOidcRoleArn=$(node getGithubOidcRoleArn.js ${{ inputs.targetEnv }})
          echo githubOidcRoleArn=${githubOidcRoleArn} >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ env.githubOidcRoleArn }}
          aws-region: 'us-east-1'
      - name: Install AWS CDK
        run: 'sudo npm install -g aws-cdk'
      - name: Deploy to AWS
        run: |
          cd cdk-infra/github-deploy-infra/common
          npm install
          npm run build
          
          cd ../micro-svc-infra
          npm install
          npm run build
          cdk deploy labsys-${{ inputs. microSvcName }}-stack ---require-approval never
        env:
          targetEnv: ${{ inputs.targetEnv }}
          microSvcName: ${{ inputs.microSvcName }}
          fargateSvcDesiredCount: ${{ inputs.fargateSvcDesiredCount }}


          



        
      
      
      
