name: Manual destroy

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      targetEnv:
        type: choice
        description: 'targetEnv'
        default: 'd1'
        required: true
        options:
          - d1
          - d2
          - t3
          - u1
          - prod
      keepApiGateway:
        description: 'keepApiGateway'
        default: true
        required: true
        type: boolean

run-name: Destroy stacks in ${{ inputs.targetEnv }}, branch=${{ github.head_ref || github.ref_name }}

jobs:
  destroyAllStacks:
    name: manual destroy
    runs-on: ubuntu-latest
    steps:
#      - name: Set destroy command - destroy all stacks but keep the API Gateway stack
#        if: ${{ inputs.keepApiGateway }}
#        run: |
#          echo destroyCommand=$(echo 'cdk destroy labsys-sharedInfra-stack labsys-animal-stack labsys-microa-stack --force') >> $GITHUB_ENV
#      - name: Set destroy command - destroy all stacks
#        if: !${{ inputs.keepApiGateway }}
#        run: |
#          echo destroyCommand=$(echo 'cdk destroy -all --force') >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials - d1
        if: ${{ inputs.targetEnv == 'd1' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.WENDYADMIN_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.WENDYADMIN_SECRET_KEY }}
          aws-region: 'us-east-1'
      - name: Configure AWS Credentials - d2
        if: ${{ inputs.targetEnv == 'd2' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.D2_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.D2_SECRET_KEY }}
          aws-region: 'us-east-1'
      - name: Configure AWS Credentials - t3
        if: ${{ inputs.targetEnv == 't3' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.T3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.T3_SECRET_KEY }}
          aws-region: 'us-east-1'
      - name: Configure AWS Credentials - prod
        if: ${{ inputs.targetEnv == 'prod' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.PROD_SECRET_KEY }}
          aws-region: 'us-east-1'
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: "16"
      - name: Install AWS CDK
        run: sudo npm install -g aws-cdk
      - name: CDK stack dependencies
        run: |
          cd cdk-infra
          npm install
          npm run build
          cdk bootstrap
      - name: Destroy AWS resources - all stacks, but keep API Gateway stack
        if: ${{ inputs.keepApiGateway }}
        run: |
          cd cdk-infra
          cdk destroy labsys-sharedInfra-stack labsys-animal-stack labsys-microa-stack --force
        env:
          targetEnv: ${{ inputs.targetEnv }}
      - name: Destroy AWS resources - all stacks
        if: ${{ ! inputs.keepApiGateway }}
        run:  |
          cd cdk-infra
          cdk destroy --all --force
        env:
          targetEnv: ${{ inputs.targetEnv }}


          



        
      
      
      
