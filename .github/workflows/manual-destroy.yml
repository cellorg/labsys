name: Manual destroy

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      targetEnv:
        type: choice
        description: 'targetEnv'
        default: 'd1'
        required: true
        options:
          - d1
          - d2
          - t3
          - u1
          - prod
      keepApiGateway:
        description: 'keepApiGateway'
        default: true
        required: true
        type: boolean

run-name: ${{ inputs.targetEnv }} - Destroy stacks, keepApiGateway=${{ inputs.keepApiGateway }}, branch=${{ github.head_ref || github.ref_name }}

jobs:
  destroyAllStacks:
    name: manual destroy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials - d1
        if: ${{ inputs.targetEnv == 'd1' }}
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::793330794008:role/github-cdk-deploy-role
          aws-region: 'us-east-1'
      - name: Configure AWS Credentials - d2
        if: ${{ inputs.targetEnv == 'd2' }}
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::743047015654:role/github-cdk-deploy-role
          aws-region: 'us-east-1'
      - name: Configure AWS Credentials - t3
        if: ${{ inputs.targetEnv == 't3' }}
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::750352965823:role/github-cdk-deploy-role
          aws-region: 'us-east-1'
      - name: Configure AWS Credentials - prod
        if: ${{ inputs.targetEnv == 'prod' }}
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::244985974061:role/github-cdk-deploy-role
          aws-region: 'us-east-1'
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: "16"
      - name: Install AWS CDK
        run: sudo npm install -g aws-cdk
      - name: Destroy AWS resources - microServices, infra and vpc
        run: |
          cd cdk-infra
          npm install
          npm run build
          cdk destroy labsys-sharedInfra-stack labsys-animal-stack labsys-microa-stack --force
          cdk destroy labsys-sharedVpc-stack --force
      - name: Destroy AWS resources - API Gateway
        if: ${{ ! inputs.keepApiGateway }}
        run:  |
          cd cdk-infra
          cdk destroy labsys-sharedApiGateway-stack --force
        env:
          targetEnv: ${{ inputs.targetEnv }}


          



        
      
      
      
